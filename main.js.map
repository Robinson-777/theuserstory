{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar>\\n  <span class=\\\"title-center\\\" style=\\\"color: rgb(22, 127, 146);font-size: bold;font-size: 35px\\\">{{header}}</span>\\n</mat-toolbar>\\n<table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n  <!-- userId Column -->\\n  <ng-container matColumnDef=\\\"userId\\\">\\n    <th mat-header-cell style=\\\"width:5%;\\\" *matHeaderCellDef mat-sort-header> UserId </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <span class=\\\"badge\\\">{{element.userId}}</span>\\n      <img style=\\\"height: 40px;width: 40px\\\" src=\\\"https://cdn4.iconfinder.com/data/icons/pretty_office_3/256/Edit-Male-User.png\\\"\\n        alt=\\\"Userimg\\\"> </td>\\n  </ng-container>\\n\\n  <!-- id Column -->\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell style=\\\"width:5%;\\\" fxFlex=\\\"50px\\\" *matHeaderCellDef mat-sort-header> Id </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <span class=\\\"badge\\\" style=\\\"margin-top:-15px;\\\"> {{element.id}}</span>\\n    </td>\\n  </ng-container>\\n\\n  <!-- title Column -->\\n  <ng-container matColumnDef=\\\"title\\\">\\n    <th mat-header-cell style=\\\"width:20%;\\\" *matHeaderCellDef mat-sort-header> Title </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <b style=\\\" color: #024457;\\\">{{element.title}} </b>\\n    </td>\\n  </ng-container>\\n\\n  <!-- body Column -->\\n  <ng-container matColumnDef=\\\"body\\\">\\n    <th mat-header-cell style=\\\"width:60%;\\\" *matHeaderCellDef mat-sort-header> Story </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"story\\\">\\n      <span> {{element.body}} </span>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<mat-toolbar *ngIf=\\\"!dataSource.data.length\\\">\\n  <span class=\\\"title-center\\\" style=\\\"color:orangered;font-size: bold;font-size: 35px\\\">No Data Found</span>\\n</mat-toolbar>\\n\"","module.exports = \":host table {\\n  width: 98%;\\n  margin: 0 auto; }\\n\\n:host th.mat-sort-header-sorted {\\n  color: black; }\\n\\n:host .title-center {\\n  margin: 0 auto; }\\n\\n:host .mat-table .mat-row:nth-child(even) {\\n  background-color: #eaf0f5; }\\n\\n:host .mat-header-row {\\n  background-color: #167f92; }\\n\\n:host .mat-header-cell {\\n  font-weight: bold;\\n  font-size: 15px;\\n  color: #fff; }\\n\\n:host ::ng-deep .mat-sort-header-arrow {\\n  color: yellow !important; }\\n\\n:host .badge {\\n  padding: 5px;\\n  position: absolute;\\n  background: #167F92;\\n  border-radius: 50%;\\n  color: #fff;\\n  font-weight: bold;\\n  margin-left: -5px;\\n  margin-top: 5px; }\\n\\n:host .story {\\n  color: #024457;\\n  padding: 10px 24px 10px 10px;\\n  line-height: 28px;\\n  font-size: 15px; }\\n\\n:host td.mat-cell,\\n:host td.mat-footer-cell,\\n:host th.mat-header-cell {\\n  border: 1px solid #D9E4E6;\\n  padding-left: 10px; }\\n\"","import { AppService } from './app.service';\nimport { Component, ViewChild, OnInit, AfterViewInit, Input } from '@angular/core';\nimport { MatSort, MatTableDataSource, MatSortable } from '@angular/material';\n\n// interface of theUserstorymodel\nexport interface TheUserStoryElement {\n  userId: number;\n  id: number;\n  title: string;\n  body: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n\n})\n\nexport class AppComponent implements OnInit, AfterViewInit {\n  header = 'The User Story';\n  displayedColumns: string[] = ['userId', 'id', 'title', 'body'];\n  dataSource = new MatTableDataSource([]);\n  toggleView = false;\n  @Input() sorting: MatSortable;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private service: AppService) {\n    this.service.fnPageSourcedata().then((data: TheUserStoryElement[]) => {\n      if (data && data.length > 0) {\n        this.dataSource.data = data;\n        // this.cpyDataSource = data.slice();\n      }\n    });\n  }\n  ngOnInit() {\n    // this.dataSource.sort = this.sort;\n  }\n\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","import { AppService } from './app.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { MatTableModule, MatSortModule, MatToolbarModule, MatFormFieldModule } from '@angular/material';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatTableModule,\n    CdkTableModule,\n    CdkTreeModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule\n\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  WebApiUrl = 'https://jsonplaceholder.typicode.com/posts';\n  constructor(private http: HttpClient) { }\n\n  fnPageSourcedata<T>(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.http.get(this.WebApiUrl)\n        .subscribe((response: any) => {\n          if (response) {\n            resolve(response);\n          }\n        }, reject);\n    });\n  }\n}\n\n// {\n//   providedIn: 'root'\n// }\n// http://jsonplaceholder.typicode.com/posts\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}